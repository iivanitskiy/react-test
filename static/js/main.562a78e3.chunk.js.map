{"version":3,"sources":["components/Modal/Modal.js","components/Cards/Card.js","api/usersApi.js","components/Cards/Cards.js","pages/home/home.js","components/Todos/Notes.js","components/Todos/TodoForm.js","pages/todos/todos.js","pages/about/about.js","components/Navbar/Navbar.js","components/Navbar/PersistentDrawerLef.js","App.js","serviceWorker.js","index.js"],"names":["Modal","user","modalVisible","toggler","Fragment","className","style","cursor","marginLeft","marginTop","onClick","first_name","last_name","email","Card","useState","setModalVisible","prev","src","avatar","alt","a","axios","get","response","data","console","error","Cards","users","setUsers","useEffect","UsersApi","then","res","catch","log","map","key","id","Home","Notes","todos","deleteTodo","note","index","Checkbox","inputProps","paddingRight","Date","toLocaleString","type","TodoForm","saveTodo","value","setValue","onSubmit","event","preventDefault","placeholder","onChange","target","Todos","setTodos","todoText","trimmedText","trim","length","addTodo","todoIndex","newTodos","filter","_","About","href","Navbar","display","justifyContent","useStyles","makeStyles","list","width","fullList","TemporaryDrawer","classes","React","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","margin","color","Drawer","onClose","clsx","role","onKeyDown","List","exact","to","Divider","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.562a78e3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './modal.css';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport function Modal({user, modalVisible, toggler}) { \r\n\r\n  return(\r\n    <React.Fragment>\r\n      {modalVisible && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-body\">\r\n            <ClearIcon style={{cursor: \"pointer\", marginLeft: 490, marginTop: -20}} onClick={toggler}/>\r\n            <p className=\"modal-text\"><strong>First Name: </strong> {user.first_name}</p>\r\n            <p className=\"modal-text\"><strong>Last Name: </strong> {user.last_name}</p>\r\n            <p className=\"modal-text\"><strong>Email: </strong> {user.email}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {} from './card.css';\r\nimport {Modal} from '../Modal/Modal';\r\n\r\nexport function Card({user}) {\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const toggler = () => {\r\n    setModalVisible(prev => !prev) \r\n  }\r\n\r\n  return (    \r\n    <React.Fragment>\r\n      <div className=\"card\" onClick={toggler}>\r\n        <p className=\"card-text\"><strong>First Name: </strong> {user.first_name}</p>\r\n        <p className=\"card-text\"><strong>Last Name: </strong> {user.last_name}</p>\r\n        <img className=\"card-img\" src={user.avatar} alt=\"avatar\" />\r\n      </div>\r\n      <Modal user={user} modalVisible={modalVisible} toggler={toggler} />\r\n    </React.Fragment>   \r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport async function UsersApi() {\r\n  try {\r\n    const response = await axios.get('https://reqres.in/api/users?page=2');\r\n    return response.data.data\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}  \r\n","import React, {useState, useEffect} from 'react';\r\nimport {} from './card.css';\r\nimport {Card} from './Card';\r\nimport {UsersApi} from '../../api/usersApi';\r\n\r\nexport function Cards() {\r\n  const [users, setUsers] = useState([])\r\n  useEffect(() => {\r\n    UsersApi().then(function(res) {\r\n        setUsers(res);\r\n      }).catch(function(error) {\r\n        console.log(error);\r\n      })\r\n  }, [setUsers]);\r\n\r\n  return (\r\n    users.map(user => (\r\n      <Card user={user} key={user.id}/>\r\n    ))\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {Cards} from '../../components/Cards/Cards';\r\nimport './home.css';\r\n\r\nexport const Home = () => {\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Cards/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport './notes.css';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport function Notes({ todos, deleteTodo }) { \r\n\r\n  return(\r\n    <React.Fragment>\r\n      <ul className=\"list-group\">\r\n        {todos.map((note, index) => (\r\n          <li \r\n            className=\"list-group-item\" \r\n            key={index}>\r\n            <div>\r\n              <Checkbox inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} />\r\n              <strong style={{paddingRight: 20}}>{note}</strong>\r\n              <small>{new Date().toLocaleString()}</small>\r\n            </div>\r\n            <button\r\n            type=\"button\"\r\n            className=\"btn\"\r\n            onClick={() => deleteTodo(index)}\r\n            >\r\n            &times;\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport function TodoForm ({ saveTodo }) {\r\n  const [value, setValue] = useState('');\r\n  const onChange = event => {\r\n    setValue(event.target.value)\r\n  }\r\n  const reset = () => setValue('')\r\n\r\n  return (\r\n    <form className=\"form\"\r\n      onSubmit={event => {\r\n      event.preventDefault()\r\n      saveTodo(value)\r\n      reset()\r\n    }}>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-input\"\r\n        placeholder=\"Введите название заметки\"\r\n        value={value}\r\n        onChange={onChange}\r\n        />\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState} from 'react';\r\nimport './todos.css';\r\nimport {Notes} from '../../components/Todos/Notes';\r\nimport {TodoForm} from '../../components/Todos/TodoForm';\r\n\r\nexport const Todos = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const addTodo = todoText => {\r\n    setTodos([...todos, todoText])\r\n  }\r\n  const deleteTodo = todoIndex => {\r\n    const newTodos = todos.filter((_, index) => index !== todoIndex)\r\n      setTodos(newTodos)\r\n  }\r\n\r\n  return (   \r\n    <React.Fragment>\r\n      <div className=\"todos\">\r\n        <TodoForm\r\n          saveTodo={todoText => {\r\n            const trimmedText = todoText.trim();\r\n            if (trimmedText.length > 0) {\r\n              addTodo(trimmedText);\r\n            }\r\n          }}\r\n        />\r\n        <Notes todos={todos} deleteTodo={deleteTodo}/>\r\n      </div>\r\n    </React.Fragment>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './about.css';\r\n\r\nexport const About = () => (   \r\n  <React.Fragment>\r\n    <div className=\"about\">\r\n      <h1>Тестовое React приложение</h1>\r\n      <p>Использованы только функциональные компоненты с использованием реакт-хуков</p>\r\n      <ul className=\"about-list\">\r\n        <li>React</li>\r\n        <li>React-router</li>\r\n        <li>React hooks</li>\r\n        <li>axios</li>\r\n        <li>Material-UI</li>\r\n        <li><a className=\"about-list\" href=\"https://reqres.in\">REQ RES</a></li>\r\n        <li><a className=\"about-list\" href=\"http://numbersapi.com\">NUMBERS API</a></li>\r\n      </ul>\r\n    </div>\r\n  </React.Fragment>\r\n  )\r\n","import React from 'react';\r\nimport './navbar.css';\r\n// import Button from '@material-ui/core/Button';\r\n// import NumberApi from '../../api/numberApi';\r\n\r\nexport const Navbar = () => {\r\n  // const [info, setInfo] = useState(false)\r\n  // const toggler = () => {\r\n  //   setInfo(prev => !prev) \r\n  // }\r\n  \r\n  // const [numbers, setNumbers] = useState('')\r\n  // useEffect(() => {\r\n  //   NumberApi().then(function(res) {\r\n  //       setNumbers(res.data);\r\n  //     }).catch(function(error) {\r\n  //       console.log(error);\r\n  //     })\r\n  // }, []);\r\n\r\n  return (\r\n    <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n      <div className=\"navbar\"> \r\n      {/* {info && (\r\n        <div className=\"navbar-info\">\r\n          <p className=\"navbar-info-number\"><strong>{numbers.number}&nbsp;-</strong></p>\r\n          <p className=\"navbar-info-text\">{numbers.text}</p>\r\n        </div>\r\n        )} */}\r\n      </div>\r\n      {/* <Button variant=\"contained\" onClick={toggler} style={{position: \"fixed\", top: 15, right: 15, whiteSpace: \"nowrap\"}}>Узнать нечто невероятное!</Button> */}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport TodosIcon from '@material-ui/icons/TodaySharp';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport './navbar.css';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List style={{margin: 20}}>\r\n        <ul className=\"nav-list\">\r\n          <li className=\"nav-link\">\r\n            <NavLink exact to=\"/react-test/\" className=\"nav-text\"><HomeIcon/>&nbsp;&nbsp;Главная</NavLink>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <NavLink to=\"/react-test/todos\" className=\"nav-text\"><TodosIcon />&nbsp;&nbsp;Todos</NavLink>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <NavLink to=\"/react-test/about\" className=\"nav-text\"><InfoIcon />&nbsp;&nbsp;Информация</NavLink>\r\n          </li>\r\n        </ul>\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <MenuIcon style={{margin: 20, cursor: \"pointer\", color: \"white\"}} onClick={toggleDrawer(anchor, true)}>{anchor}</MenuIcon>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport {Home} from './pages/home/home';\nimport {Todos} from './pages/todos/todos';\nimport {About} from './pages/about/about';\nimport {Navbar} from './components/Navbar/Navbar';\nimport TemporaryDrawer from './components/Navbar/PersistentDrawerLef';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <TemporaryDrawer />\n      <Switch>\n        <Route path=\"/react-test\" exact component={Home} />\n        <Route path=\"/react-test/todos\" component={Todos}/>\n        <Route path=\"/react-test/about\" component={About}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}