{"version":3,"sources":["components/modal.js","components/card.js","api/usersApi.js","pages/home.js","pages/about.js","api/numberApi.js","components/navbar.js","components/PersistentDrawerLef.js","App.js","serviceWorker.js","index.js"],"names":["Modal","users","modalContext","useModal","Fragment","state","className","key","id","style","cursor","marginLeft","marginTop","position","onClick","hide","first_name","last_name","email","ModalContext","React","createContext","useContext","Card","useReducer","action","type","dispatch","Provider","value","src","avatar","alt","a","axios","get","response","data","console","error","Home","useState","setUsers","useEffect","UsersApi","then","res","catch","log","map","user","About","href","Navbar","info","setInfo","numbers","setNumbers","NumberApi","display","justifyContent","number","text","Button","variant","prev","top","right","whiteSpace","useStyles","makeStyles","list","width","fullList","TemporaryDrawer","classes","left","bottom","setState","toggleDrawer","anchor","open","event","margin","color","Drawer","onClose","clsx","role","onKeyDown","List","exact","to","Divider","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d166ebf4.chunk.js","sourcesContent":["import React from 'react'\r\nimport './modal.css'\r\nimport {useModal} from './card'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\n\r\nexport function Modal({users})  {\r\n  const modalContext = useModal();\r\n  \r\n    return(\r\n        <React.Fragment>\r\n          {modalContext.state && (\r\n            <div className=\"modal\" key={users.id}>\r\n              <div className=\"modal-body\">\r\n                <ClearIcon style={{cursor: \"pointer\", marginLeft: 490, marginTop: -20, position: \"fixed\"}} onClick={modalContext.hide}/>\r\n                <p className=\"modal-text\"><strong>First Name: </strong> {users.first_name}</p>\r\n                <p className=\"modal-text\"><strong>Last Name: </strong> {users.last_name}</p>\r\n                <p className=\"modal-text\"><strong>Email: </strong> {users.email}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import React, { useContext, useReducer } from 'react';\r\nimport {} from '../components/card.css';\r\nimport {Modal} from '../components/modal';\r\n\r\nconst ModalContext = React.createContext()\r\nexport const useModal = () => {\r\n  return useContext(ModalContext)\r\n}\r\nexport function Card({users}) {\r\n  const SHOW_MODAL = 'show'\r\n  const HIDE_MODAL = 'hide'\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case SHOW_MODAL: return {...state}\r\n      case HIDE_MODAL: return null\r\n      default: return state\r\n    }\r\n  }\r\n  const [state, dispatch] = useReducer(reducer, false)\r\n  const show = () => dispatch({ type: SHOW_MODAL})\r\n  const hide = () => dispatch({ type: HIDE_MODAL})\r\n\r\n  return (\r\n    <ModalContext.Provider value={{state, hide}}>\r\n      <div className=\"card\" key={users.id} onClick={show}>\r\n        <p className=\"card-text\"><strong>First Name: </strong> {users.first_name}</p>\r\n        <p className=\"card-text\"><strong>Last Name: </strong> {users.last_name}</p>\r\n        <img className=\"card-img\" src={users.avatar} alt=\"avatar\" />\r\n      </div>\r\n      <Modal users={users} />\r\n    </ModalContext.Provider>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport async function UsersApi() {\r\n  try {\r\n    const response = await axios.get('https://reqres.in/api/users?page=2');\r\n    return response.data.data\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}  \r\n","import React, {useState, useEffect} from 'react'\r\nimport {Card} from '../components/card';\r\nimport {UsersApi} from '../api/usersApi';\r\nimport './home.css'\r\n\r\nexport const Home = () => {\r\n  const [users, setUsers] = useState([])\r\n\r\n  useEffect(() => {\r\n    UsersApi().then(function(res) {\r\n        setUsers(res);\r\n      }).catch(function(error) {\r\n        console.log(error);\r\n      })\r\n  }, [setUsers]);\r\n\r\n  return (\r\n    \r\n    <React.Fragment>\r\n      <div className=\"home\">\r\n        {users.map(user => (\r\n          <Card users={user} />\r\n        ))\r\n      }\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './about.css'\r\n\r\nexport const About = () => {\r\n\r\n  return (\r\n    \r\n    <React.Fragment>\r\n      <div className=\"about\">\r\n        <h1>Тестовое React приложение</h1>\r\n        <p>Использованы только функциональные компоненты с использованием реакт-хуков</p>\r\n        <ul className=\"about-list\">\r\n          <li>React</li>\r\n          <li>React-router</li>\r\n          <li>React hooks</li>\r\n          <li>axios</li>\r\n          <li>Material-UI</li>\r\n          <li><a className=\"about-list\" href=\"https://reqres.in\">REQ RES</a></li>\r\n          <li><a className=\"about-list\" href=\"http://numbersapi.com\">NUMBERS API</a></li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n","import axios from 'axios';\r\n\r\nexport default async function NumberApi() {\r\n  try {\r\n    const response = await axios.get('http://numbersapi.com/random/year?json');\r\n    return response\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}  \r\n","import React, {useState, useEffect} from 'react';\r\nimport './navbar.css'\r\nimport Button from '@material-ui/core/Button';\r\nimport NumberApi from '../api/numberApi'\r\n\r\nexport const Navbar = () => {\r\n  const [info, setInfo] = useState(false)\r\n  const toggler = () => {\r\n    setInfo(prev => !prev) \r\n  }\r\n  \r\n  const [numbers, setNumbers] = useState('')\r\n  useEffect(() => {\r\n    NumberApi().then(function(res) {\r\n        setNumbers(res.data);\r\n      }).catch(function(error) {\r\n        console.log(error);\r\n      })\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{display: \"flex\", justifyContent: \"flex-end\"}}>\r\n      <div className=\"navbar\"> \r\n      {info && (\r\n        <div className=\"navbar-info\">\r\n          <p className=\"navbar-info-number\"><strong>{numbers.number}&nbsp;-</strong></p>\r\n          <p className=\"navbar-info-text\">{numbers.text}</p>\r\n        </div>\r\n        )}\r\n      </div>\r\n      <Button variant=\"contained\" onClick={toggler} style={{position: \"fixed\", top: 15, right: 15, whiteSpace: \"nowrap\"}}>Узнать нечто невероятное!</Button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport '../components/navbar.css';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List style={{margin: 20}}>\r\n        <ul className=\"nav-list\">\r\n          <li className=\"nav-link\">\r\n            <NavLink exact to=\"/react-test/\" className=\"nav-text\"><HomeIcon/>&nbsp;&nbsp;Главная</NavLink>\r\n          </li>\r\n          <li className=\"nav-link\">\r\n            <NavLink to=\"/react-test/about\" className=\"nav-text\"><InfoIcon />&nbsp;&nbsp;Информация</NavLink>\r\n          </li>\r\n        </ul>\r\n      </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <MenuIcon style={{margin: 20, cursor: \"pointer\", color: \"white\"}} onClick={toggleDrawer(anchor, true)}>{anchor}</MenuIcon>\r\n          <Drawer anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport {Home} from './pages/home';\nimport {About} from './pages/about';\nimport {Navbar} from './components/navbar';\nimport TemporaryDrawer from './components/PersistentDrawerLef'\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n      <Navbar />\n      <TemporaryDrawer />\n        <Switch>\n          <Route path=\"/react-test\" exact component={Home} />\n          <Route path=\"/react-test/about\" component={About}/>\n        </Switch>\n      </BrowserRouter>\n      </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}